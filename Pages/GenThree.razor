@page "/genthree"
@inject HttpClient httpClient
@using ServerSideProject.Data
@using Newtonsoft.Json



@if (allGen3 == null)
{
    <h1 class="text-center"> No Pokemon to display</h1>
}
else
{
    <Modal @ref="modal" />

    <table class="pokemon-table-spacing container-fluid">

        @for (int i = 0; i < allGen3.Count(); i += 3)
        {
            var j = allGen3[i];
            <tr>
                <td class="pokemon-List pokeButton" @onclick="() => ShowEmployeeComponent(j)">
                    <img style="width: 50%; padding: 0" src="@allGen3[i].SpriteURL" alt="@allGen3[i].Name">
                    <p style="float:right">
                        <h3>@allGen3[i].Name.ToUpper()</h3><br>
                        Grass/ Poison
                        @i
                    </p>
                </td>
                
                @if (i + 1 <= allGen3.Count() - 1)
                {
                    var m = allGen3[i + 1];
                    <td class="pokemon-List" @onclick="() => ShowEmployeeComponent(m)">
                        <img style="width: 50%; padding: 0" src="@allGen3[i+1].SpriteURL" alt="@allGen3[i+1].Name">
                        <p style="float:right">
                            <h3>@allGen3[i+1].Name.ToUpper()</h3><br>
                            Grass/ Poison
                            @i+1
                        </p>
                    </td>
                    @if (i + 2 <= allGen3.Count() - 1)
                    {
                        var n = allGen3[i + 2]; 
                        <td class="pokemon-List" @onclick="() => ShowEmployeeComponent(n)">
                            <img style="width: 50%; padding: 0" src="@allGen3[i+2].SpriteURL" alt="@allGen3[i+2].Name">
                            <p style="float:right">
                                <h3>@allGen3[i+2].Name.ToUpper()</h3><br>
                                Grass/ Poison
                                @i+2
                            </p>
                        </td>
                    }
                }
            </tr>
        }
    </table>
}



@code {
    public Pokemon[]? allGen3;
    public Pokemon CurrentPokemon;
    private Modal modal = default!;
    private string? message;

    // string json = System.IO.File.ReadAllText("C:\\Users\\kyahh\\OneDrive\\Documents\\Server Side\\ServerSideProject\\Data\\gen1.json");
    string json = System.IO.File.ReadAllText("./Data/gen3.json");
    protected override async Task OnInitializedAsync()
    {
        allGen3 = Newtonsoft.Json.JsonConvert.DeserializeObject<Pokemon[]>(json);
    }

    private async Task ShowEmployeeComponent(Pokemon newP)
    {
        SetC(newP);
        var parameters = new Dictionary<string, object>();
        parameters.Add("Pokemon", CurrentPokemon);
        await modal.ShowAsync<PokemonModal>(title: "Employee Details", parameters: parameters);
    }

    private void SetC(Pokemon newP)
    {
        CurrentPokemon = newP;
    }

}


